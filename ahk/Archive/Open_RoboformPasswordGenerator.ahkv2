;
;	Open_RoboformPasswordGenerator
;   |--> Opens Roboform's Password Generator executable
;
Open_RoboformPasswordGenerator() {
	Global DebugMode
	AwaitModifierKeyup()  ; Wait until all modifier keys are released
	SetTitleMatchMode, 2  ; A window's title can contain WinTitle anywhere inside it to be a match
	; SetTitleMatchMode, 3  ; A window's title must exactly match WinTitle to be a match
	ProcessPath := "C:\Program Files (x86)\Siber Systems\AI RoboForm\passwordgenerator.exe"
	WinTitle := "Password Generator - RoboForm"
	WinTitle_Login := "RoboForm Log In"
	WinWait_TimeoutSeconds := 5
	If (DebugMode == 1) {
		GetWindowSpecs(WinTitle)
		Sleep 500
	}
	If (WinExist(WinTitle_Login)) {
		WinActivate, %WinTitle_Login%
	} Else If (WinExist(WinTitle)) {
		If (DebugMode == 1) {
			Text_TrayTip := "Activating existing instance of `"" WinTitle "`""
			; TrayTip, AHK, %Text_TrayTip%  ; Toast Notification
		}
		WinActivate, %WinTitle%
	} Else If (FileExist(ProcessPath)) {
		If (DebugMode == 1) {
			Text_TrayTip := "Opening new-instance of `"" WinTitle "`""
			; TrayTip, AHK, %Text_TrayTip%  ; Toast Notification
		}
		Run, %ProcessPath%
		WinWait, %WinTitle%,, %WinWait_TimeoutSeconds%
		If (WinExist(WinTitle)) {
			WinActivate, %WinTitle%
		} Else If (WinExist(WinTitle_Login)) {
			WinActivate, %WinTitle_Login%
		} Else {
			Text_TrayTip := "Error - Max wait-timeout of " WinWait_TimeoutSeconds "s reached while waiting for `"" WinTitle "`""
			TrayTip, AHK, %Text_TrayTip%  ; Toast Notification
		}
	} Else {
		Text_TrayTip := "Error - ProcessPath not found:  `"" ProcessPath "`""
		TrayTip, AHK, %Text_TrayTip%  ; Toast Notification
	}
	Return
}
