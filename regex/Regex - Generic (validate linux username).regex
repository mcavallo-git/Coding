//!/bin/bash
// ------------------------------------------------------------
//
// Regex - Valid linux usernames
//

// Find:
^[a-z_][a-z0-9_\-]{0,30}[a-z0-9_\-\$]?$


// ------------------------------------------------------------
//
// Example
//

USER_NAME_TEST="xxxyyyzzz"; echo ${USER_NAME_TEST} | grep --extended-regexp '^[a-z_][a-z0-9_\-]{0,30}[a-z0-9_\-\$]?$'


// ------------------------------------------------------------
//
//####  man useradd
//
// ...
//
// CAVEATS
//      You may not add a user to a NIS or LDAP group. This must be performed on the corresponding server.
//
//      Similarly, if the username already exists in an external user database such as NIS or LDAP, useradd will deny the user account creation request.
//
//      It is usually recommended to only use usernames that begin with a lower case letter or an underscore, followed by lower case letters, digits,
//      underscores, or dashes. They can end with a dollar sign. In regular expression terms: [a-z_][a-z0-9_-]*[$]?
//
//      On Debian, the only constraints are that usernames must neither start with a dash ('-') nor plus ('+') nor tilde ('~') nor contain a colon (':'), a
//      comma (','), or a whitespace (space: ' ', end of line: '\n', tabulation: '\t', etc.). Note that using a slash ('/') may break the default algorithm
//      for the definition of the user's home directory.
//
//      Usernames may only be up to 32 characters long.
//
// ...
//
//
// ------------------------------------------------------------
//
// Citation(s)
//
//   man7.org | "useradd - create a new user or update default new user information" | http://man7.org/linux/man-pages/man8/useradd.8.html#CAVEATS
//
//   regexr.com  |  "RegExr: Learn, Build, & Test RegEx"  |  https://regexr.com/
//
//   stackexchange.com | "What is the regex to validate Linux users?" | https://unix.stackexchange.com/a/157430
//
// ------------------------------------------------------------