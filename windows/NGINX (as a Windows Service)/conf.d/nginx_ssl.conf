#
# Nginx HTTPS Configuration
#      MCavallo, 2019-05-07_01-17-46
#

# enable session resumption to improve https performance - http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
ssl_session_cache shared:SSL:50m; # ssl_session_cache shared:le_nginx_SSL:1m;
ssl_session_timeout 1d; # ssl_session_timeout 1440m;
ssl_session_tickets off;

# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
#  |-->  mkdir -p "/c/nginx/ssl"; openssl dhparam -out "/c/nginx/ssl/dhparam.pem" 2048;
ssl_dhparam "C:/nginx/ssl/dhparam.pem";

## *** See Mozilla Suggested Config @ https://ssl-config.mozilla.org/#server=nginx&server-version=1.17.0&config=modern  ( Pulled 2019-10-21_15-35-08 )
## *** See Mozilla Suggested Config @ https://ssl-config.mozilla.org/#server=nginx&server-version=1.17.0&config=intermediate  ( Pulled 20200113-235650 )
## [ TLSv1.3 ] <-- TLSv1.3 is so different, it needs to be configured on its own (high security, low compatibility) without TLS v1.2, etc
## [ TLS 1.0 ], [ TLS 1.1 ] are deprecated after March 2020 - https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.0
## [ TLS 1.0 ] has an included method which can downgrade requests to the weaker [ SSL-3 ] encryption-algorithm (if server allows it)
## [ SSL-1, SSL-2, & SSl-3 ] all have been determined to be insecure/vulnerable methods of encryption  since Oct-2014 - https://en.wikipedia.org/wiki/Transport_Layer_Security#Security
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;


# Enable "Perfect Forward Secrecy" - ( https://www.digicert.com/ssl-support/ssl-enabling-perfect-forward-secrecy.htm )
# Enable server-side protection --> protects from BEAST attacks ( https://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html )
ssl_prefer_server_ciphers on;
# ssl_prefer_server_ciphers off;

# Enable OCSP stapling (mechanism by which a site can convey certificate revocation info w/ visitors in a private manner)  :::  https://gist.github.com/plentz/6737338#file-nginx-conf-L69
resolver 8.8.8.8 1.1.1.1 [2001:4860:4860::8888] [2606:4700:4700::1111] valid=300s; # Configures name servers used to resolve names of upstream servers into addresses (as well as into the cache) 
# ssl_stapling on;
# ssl_stapling_verify on;

# config to enable HSTS (HTTP Strict Transport Security) to avoid ssl stripping
#  |--> https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
#  |--> https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
#  |--> https://hstspreload.org/
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

# For HTTP-based CLI over SSL
proxy_http_version 1.1;  # proxy_http_version 1.1 is recommended for use with keepalive connections and NTLM authentication.
proxy_buffering off;
proxy_request_buffering off;

# ------------------------------------------------------------
# Citation(s)
#
# Check ciphers manually via "nmap" linux package (apt-get install -y nmap;)
#  |--> nmap --script ssl-enum-ciphers -p 443 "example.com";
#
# Test Host's SSL-Config
#  |--> https://www.immuniweb.com/ssl
#  |--> https://www.ssllabs.com/ssltest
#
# Mozilla's Config Generator (the bee's knees)
#  |--> https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.14.0&openssl=1.0.2g&hsts=yes&profile=modern
#
# Cipher's Documentation
#  |--> https://testssl.sh/openssl-iana.mapping.html
#  |--> https://wiki.mozilla.org/Security/Server_Side_TLS
#  |--> https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4
#  |--> https://www.mkssoftware.com/docs/man1/openssl_ciphers.1.asp
# 
# NIST Technical Requirements
#  |--> https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-171.pdf
#
# ------------------------------------------------------------