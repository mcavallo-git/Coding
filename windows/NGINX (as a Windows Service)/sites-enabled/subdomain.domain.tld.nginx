# ------------------------------------------------------------
#
# subdomain.domain.tld
#


map $http_upgrade $connection_upgrade {  # WebSocket support
  default upgrade;
  '' close;
}


# server {
#   listen 80;
#   server_name ~^(?!(subdomain\.domain\.tld))$;
#   return 302 https://subdomain.domain.tld$request_uri;  # Force request-upgrade from HTTP(80) to HTTPS(443)
#   include "c:/nginx/nginx_error_locations.conf";
# }


# server {
#   listen 443 ssl http2;
#   server_name ~^(?!(subdomain\.domain\.tld))$;
#   ssl_certificate "c:/nginx/certs/wildcard.domain.tld/fullchain.pem";
#   ssl_certificate_key "c:/nginx/certs/wildcard.domain.tld/privkey.pem";
#   ssl_trusted_certificate "c:/nginx/certs/wildcard.domain.tld/chain.pem";
#   return 302 https://subdomain.domain.tld$request_uri;  # Force request-upgrade from HTTP(80) to HTTPS(443)
#   include "c:/nginx/nginx_error_locations.conf";
# }


server {
  listen 80 default_server;
  listen 443 ssl http2 default_server;
  listen [::]:80;
  listen [::]:443 ssl http2;
  server_name _
  # server_name ~^(?<subdomain>.+\.)?domain\.tld$;
  include "c:/nginx/nginx_error_locations.conf";
  ssl_certificate "c:/nginx/certs/wildcard.domain.tld/fullchain.pem";
  ssl_certificate_key "c:/nginx/certs/wildcard.domain.tld/privkey.pem";
  ssl_trusted_certificate "c:/nginx/certs/wildcard.domain.tld/chain.pem";
  if ($scheme != "https") {
    return 302 https://subdomain.domain.tld$request_uri;  # Force request-upgrade from HTTP(80) to HTTPS(443)
  }
  location / {
    include "c:/nginx/nginx_proxy_pass_headers.conf";
    proxy_set_header Host $server_name:$server_port;  
    proxy_set_header X-Forwarded-Host $http_host;    # necessary for proper absolute redirects and CSRF check
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Upgrade $http_upgrade; # WebSocket support
    proxy_set_header Connection $connection_upgrade; # WebSocket support
    proxy_redirect http://127.0.0.1:8080 https://$host;
    proxy_pass http://127.0.0.1:8080;
  }
}


# ------------------------------------------------------------
#
# Citation(s)
#
#   nginx.org  |  "Module ngx_http_proxy_module"  |  https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version
#
#   nginx.org  |  "WebSocket proxying"  |  https://nginx.org/en/docs/http/websocket.html
#
#   www.nginx.com  |  "Using NGINX as a WebSocket Proxy"  |  https://www.nginx.com/blog/websocket-nginx/
#
# ------------------------------------------------------------